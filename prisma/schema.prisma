datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

model User {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    username  String   @db.VarChar(255)
    password  String
    email     String   @unique
    profile   Profile?

    roleId String
    role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@index([roleId])
}

model Profile {
    id           String  @id @default(uuid())
    user         User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId       String  @unique
    address      String?
    mobilenumber String?
    img          String?
    firstname    String?
    lastname     String?
    gender       String?

    @@index([userId])
}

model Role {
    id   String @id @default(uuid())
    user User[]
    role String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Clearance {
    id           String        @id @default(uuid())
    name         String
    description  String?       @db.Text
    requirements Requirement[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Requirement {
    id          String  @id @default(uuid())
    name        String?
    description String? @db.Text

    clearanceId String
    clearance   Clearance    @relation(fields: [clearanceId], references: [id], onDelete: Cascade)
    attachments Attachment[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([clearanceId])
}

model Attachment {
    id   String  @id @default(uuid())
    name String  @db.Text
    url  String?

    requirmentId String
    requirement  Requirement @relation(fields: [requirmentId], references: [id], onDelete: Cascade)
    updatedAt    DateTime    @updatedAt
    createdAt    DateTime    @default(now())

    @@index([requirmentId])
}

model Announcement {
    id       String    @id @default(uuid())
    title    String    @db.Text
    content  String?
    from     DateTime?
    to       DateTime?
    location String?
    action   String?
    url      String?
}
